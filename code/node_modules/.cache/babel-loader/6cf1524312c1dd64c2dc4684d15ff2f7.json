{"ast":null,"code":"var _jsxFileName = \"/home/coffeedoodles/Technigo/final-project-fe/code/src/components/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch, batch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport user from \"../../reducers/user\";\nimport { API_URL } from \"../../reuseables/urls\";\nimport { InputField, Label, Form, MainContainer, Header, InputWrapper, PrimaryButton, SecondaryButtonContainer, SecondaryButton, Text, ErrorMessage, ButtonContainer } from \"../styled-components/FormElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mode, setMode] = useState(null);\n  const accessToken = useSelector(store => store.user.accessToken);\n  const error = useSelector(store => store.user.errors);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (accessToken) {\n      history.push(\"/\");\n    }\n  }, [accessToken, history]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    fetch(API_URL(mode), options).then(res => res.json()).then(data => {\n      if (data.success) {\n        batch(() => {\n          dispatch(user.actions.setUsername(data.username));\n          dispatch(user.actions.setAccessToken(data.accessToken));\n          dispatch(user.actions.setErrors(null));\n          localStorage.setItem(\"user\", JSON.stringify({\n            username: data.username,\n            accessToken: data.accessToken\n          }));\n        });\n      } else {\n        dispatch(user.actions.setErrors(data));\n      }\n    }).catch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Please Login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          type: \"submit\",\n          onClick: () => setMode(\"authenticate-user\"),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SecondaryButtonContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Register as a PetSpotter?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(SecondaryButton, {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9CpVKtpmW0TGPMN8e+0Opmmt+Zs=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/coffeedoodles/Technigo/final-project-fe/code/src/components/pages/Login.js"],"names":["React","useState","useEffect","useSelector","useDispatch","batch","useHistory","Link","user","API_URL","InputField","Label","Form","MainContainer","Header","InputWrapper","PrimaryButton","SecondaryButtonContainer","SecondaryButton","Text","ErrorMessage","ButtonContainer","Login","username","setUsername","password","setPassword","mode","setMode","accessToken","store","error","errors","dispatch","history","push","onFormSubmit","e","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","success","actions","setAccessToken","setErrors","localStorage","setItem","catch","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch, batch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport user from \"../../reducers/user\";\nimport { API_URL } from \"../../reuseables/urls\";\nimport {\n  InputField,\n  Label,\n  Form,\n  MainContainer,\n  Header,\n  InputWrapper,\n  PrimaryButton,\n  SecondaryButtonContainer,\n  SecondaryButton,\n  Text,\n  ErrorMessage,\n  ButtonContainer\n} from \"../styled-components/FormElements\";\n\n\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mode, setMode] = useState(null);\n\n  const accessToken = useSelector((store) => store.user.accessToken);\n  const error = useSelector((store) => store.user.errors);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (accessToken) {\n      history.push(\"/\");\n    }\n  }, [accessToken, history]);\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    };\n    fetch(API_URL(mode), options)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) {\n          batch(() => {\n            dispatch(user.actions.setUsername(data.username));\n            dispatch(user.actions.setAccessToken(data.accessToken));\n            dispatch(user.actions.setErrors(null));\n\n            localStorage.setItem(\n              \"user\",\n              JSON.stringify({\n                username: data.username,\n                accessToken: data.accessToken,\n              })\n            );\n          });\n        } else {\n          dispatch(user.actions.setErrors(data));\n        }\n      })\n      .catch();\n  };\n\n  return (\n    <MainContainer>\n      <Form onSubmit={onFormSubmit}>\n        <Header>Please Login.</Header>\n        <InputWrapper>\n          <Label htmlFor=\"username\">Username:</Label>\n          <InputField\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <Label htmlFor=\"password\">Password:</Label>\n          <InputField\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </InputWrapper>\n        <ButtonContainer>\n        {error && <ErrorMessage>{error.message}</ErrorMessage>}\n        <PrimaryButton\n          type=\"submit\"\n          onClick={() => setMode(\"authenticate-user\")}\n        >\n          Login\n        </PrimaryButton>\n        <SecondaryButtonContainer>\n          <Text>Register as a PetSpotter?</Text>\n          <Link to=\"/register\">\n            <SecondaryButton>Register</SecondaryButton>\n          </Link>\n        </SecondaryButtonContainer>\n        </ButtonContainer>\n      </Form>\n    </MainContainer>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}