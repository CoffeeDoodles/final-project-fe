{"ast":null,"code":"var _jsxFileName = \"/home/coffeedoodles/Technigo/final-project-fe/petspotter-fe/code/src/components/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch, batch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport user from '../../reducers/user';\nimport { PETS_API_URL } from '../../reuseables/urls';\nimport { MainContainer, Header, Form, Label, InputField, Text, SecondaryButtonContainer, PrimaryButton, SecondaryButton, ErrorMessage, InputWrapper } from '../styled-components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [mode, setMode] = useState(null);\n  const accessToken = useSelector(store => store.user.accessToken);\n  const error = useSelector(store => store.user.errors);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    history.push('/register');\n  }, [], history);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    fetch(PETS_API_URL(mode), options).then(res => res.json()).then(data => {\n      if (data.success) {\n        batch(() => {\n          dispatch(user.actions.setUsername(data.username));\n          dispatch(user.actions.setAccessToken(data.accessToken));\n          dispatch(user.actions.setErrors(null));\n          localStorage.setItem('user', JSON.stringify({\n            username: data.username,\n            accessToken: data.accessToken\n          }));\n        });\n      } else {\n        dispatch(user.actions.setErrors(data));\n      }\n    }).catch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Register here to be a PetSpotter!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        type: \"submit\",\n        onClick: () => setMode('register'),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SecondaryButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Already registered?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(SecondaryButton, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"8fGZtrfSrpQeXb2qSlZTXOxUBtA=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/coffeedoodles/Technigo/final-project-fe/petspotter-fe/code/src/components/pages/Register.js"],"names":["React","useState","useEffect","useSelector","useDispatch","batch","useHistory","Link","user","PETS_API_URL","MainContainer","Header","Form","Label","InputField","Text","SecondaryButtonContainer","PrimaryButton","SecondaryButton","ErrorMessage","InputWrapper","Register","username","setUsername","password","setPassword","mode","setMode","accessToken","store","error","errors","dispatch","history","push","onFormSubmit","e","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","success","actions","setAccessToken","setErrors","localStorage","setItem","catch","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch, batch} from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport user from '../../reducers/user'\n\nimport { PETS_API_URL } from '../../reuseables/urls'\nimport { MainContainer, Header, Form, Label, InputField, Text, SecondaryButtonContainer, PrimaryButton, SecondaryButton, ErrorMessage, InputWrapper } from '../styled-components/Form'\n\nconst Register = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [mode, setMode] = useState(null)\n\n  const accessToken = useSelector(store => store.user.accessToken)\n  const error = useSelector(store => store.user.errors)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n  useEffect(() => {\n    history.push('/register')\n  }, [], history)\n\n  const onFormSubmit = (e) => {\n    e.preventDefault()\n    \n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username, password }) \n    }\n    fetch (PETS_API_URL(mode), options)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          batch(() => {\n            dispatch(user.actions.setUsername(data.username))\n            dispatch(user.actions.setAccessToken(data.accessToken))\n            dispatch(user.actions.setErrors(null))\n\n            localStorage.setItem('user', JSON.stringify({\n              username: data.username,\n              accessToken: data.accessToken\n            }))\n          })\n        } else {\n          dispatch(user.actions.setErrors(data))\n        }\n      })\n      .catch()\n    }\n\n  return (\n    <MainContainer>\n      <Form onSubmit={onFormSubmit}>\n        <Header>\n          Register here to be a PetSpotter!\n        </Header>\n        <InputWrapper>\n          <Label htmlFor=\"username\">Username:</Label> \n            <InputField\n              id='username'\n              type='text'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          <Label htmlFor=\"password\">Password:</Label> \n            <InputField\n              id='password'\n              type='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n        </InputWrapper>\n        {error && <ErrorMessage>{error.message}</ErrorMessage>}\n        <PrimaryButton\n          type='submit'\n          onClick={() => setMode('register')}\n        >\n          Register\n        </PrimaryButton>\n        <SecondaryButtonContainer>\n          <Text>\n            Already registered? \n          </Text>\n          <Link to=\"/login\">\n            <SecondaryButton>\n              Login\n            </SecondaryButton>\n          </Link>\n        </SecondaryButtonContainer>\n      </Form>\n    </MainContainer>\n  )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}