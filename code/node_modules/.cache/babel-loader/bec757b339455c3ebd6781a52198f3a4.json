{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clamp = clamp;\nexports.scrolledOverPercent = scrolledOverPercent;\nexports.resizeToRatio = resizeToRatio;\nexports.resizeToContain = resizeToContain;\nexports.resizeToCover = resizeToCover;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Clamp a value between two other values\n * @param {number} number\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\n\n\nfunction clamp(number) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(number, min), max);\n}\n/*\n * Get the percentage scrolled over an element\n * @param {HTMLElement} element\n * @return {number} value between 0 and 1\n */\n\n\nfunction scrolledOverPercent(element) {\n  var scrolled = window.pageYOffset;\n  var height = element.offsetHeight;\n  var top = element.offsetTop;\n  var percent = scrolled / (top + height);\n  return clamp(percent);\n}\n/*\n * Resize to original aspect ratio\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {string} prop Property name\n * @param {number} value Current property value\n * @param {Object} new height and width\n */\n\n\nfunction resizeToRatio(dimensions, prop, value) {\n  var _ref;\n\n  var otherProp = prop === 'width' ? 'height' : 'width';\n  var otherPropValue = Math.round(value * dimensions[otherProp] / dimensions[prop]);\n  return _ref = {}, _defineProperty(_ref, otherProp, otherPropValue), _defineProperty(_ref, prop, value), _ref;\n}\n/*\n * Simulate \"background-position: contain\"\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {Object} maxDimensions The available space\n * @param {number} maxDimensions.height\n * @param {number} maxDimensions.width\n * @return {Object} new height and width\n */\n\n\nfunction resizeToContain(dimensions, maxDimensions) {\n  return Object.keys(dimensions).reduce(function (prevDimensions, prop) {\n    return prevDimensions[prop] > maxDimensions[prop] ? resizeToRatio(prevDimensions, prop, maxDimensions[prop]) : prevDimensions;\n  }, dimensions);\n}\n/*\n * Simulate \"background-position: cover\"\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {Object} maxDimensions The available space\n * @param {number} maxDimensions.height\n * @param {number} maxDimensions.width\n * @return {Object} new height and width\n */\n\n\nfunction resizeToCover(dimensions, maxDimensions) {\n  var dimensionsAfterContain = resizeToContain(dimensions, maxDimensions);\n  return Object.keys(dimensions).reduce(function (prevDimensions, prop) {\n    return prevDimensions[prop] < maxDimensions[prop] ? resizeToRatio(prevDimensions, prop, maxDimensions[prop]) : prevDimensions;\n  }, dimensionsAfterContain);\n}","map":{"version":3,"sources":["/home/coffeedoodles/Technigo/final-project-fe/petspotter-fe/code/node_modules/react-lazy-hero/lib/utils.js"],"names":["Object","defineProperty","exports","value","clamp","scrolledOverPercent","resizeToRatio","resizeToContain","resizeToCover","_defineProperty","obj","key","enumerable","configurable","writable","number","min","arguments","length","undefined","max","Math","element","scrolled","window","pageYOffset","height","offsetHeight","top","offsetTop","percent","dimensions","prop","_ref","otherProp","otherPropValue","round","maxDimensions","keys","reduce","prevDimensions","dimensionsAfterContain"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgBA,KAAhB;AACAF,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;AACAH,OAAO,CAACI,aAAR,GAAwBA,aAAxB;AACAJ,OAAO,CAACK,eAAR,GAA0BA,eAA1B;AACAL,OAAO,CAACM,aAAR,GAAwBA,aAAxB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCR,KAAnC,EAA0C;AAAE,MAAIQ,GAAG,IAAID,GAAX,EAAgB;AAAEV,IAAAA,MAAM,CAACC,cAAP,CAAsBS,GAAtB,EAA2BC,GAA3B,EAAgC;AAAER,MAAAA,KAAK,EAAEA,KAAT;AAAgBS,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEJ,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWR,KAAX;AAAmB;;AAAC,SAAOO,GAAP;AAAa;AAEjN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,KAAT,CAAeW,MAAf,EAAuB;AACnB,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAA9E;AACA,MAAIG,GAAG,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAA9E;AAEA,SAAOI,IAAI,CAACL,GAAL,CAASK,IAAI,CAACD,GAAL,CAASL,MAAT,EAAiBC,GAAjB,CAAT,EAAgCI,GAAhC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASf,mBAAT,CAA6BiB,OAA7B,EAAsC;AAClC,MAAIC,QAAQ,GAAGC,MAAM,CAACC,WAAtB;AACA,MAAIC,MAAM,GAAGJ,OAAO,CAACK,YAArB;AACA,MAAIC,GAAG,GAAGN,OAAO,CAACO,SAAlB;AACA,MAAIC,OAAO,GAAGP,QAAQ,IAAIK,GAAG,GAAGF,MAAV,CAAtB;AAEA,SAAOtB,KAAK,CAAC0B,OAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASxB,aAAT,CAAuByB,UAAvB,EAAmCC,IAAnC,EAAyC7B,KAAzC,EAAgD;AAC5C,MAAI8B,IAAJ;;AAEA,MAAIC,SAAS,GAAGF,IAAI,KAAK,OAAT,GAAmB,QAAnB,GAA8B,OAA9C;AACA,MAAIG,cAAc,GAAGd,IAAI,CAACe,KAAL,CAAWjC,KAAK,GAAG4B,UAAU,CAACG,SAAD,CAAlB,GAAgCH,UAAU,CAACC,IAAD,CAArD,CAArB;AAEA,SAAOC,IAAI,GAAG,EAAP,EAAWxB,eAAe,CAACwB,IAAD,EAAOC,SAAP,EAAkBC,cAAlB,CAA1B,EAA6D1B,eAAe,CAACwB,IAAD,EAAOD,IAAP,EAAa7B,KAAb,CAA5E,EAAiG8B,IAAxG;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS1B,eAAT,CAAyBwB,UAAzB,EAAqCM,aAArC,EAAoD;AAChD,SAAOrC,MAAM,CAACsC,IAAP,CAAYP,UAAZ,EAAwBQ,MAAxB,CAA+B,UAAUC,cAAV,EAA0BR,IAA1B,EAAgC;AAClE,WAAOQ,cAAc,CAACR,IAAD,CAAd,GAAuBK,aAAa,CAACL,IAAD,CAApC,GAA6C1B,aAAa,CAACkC,cAAD,EAAiBR,IAAjB,EAAuBK,aAAa,CAACL,IAAD,CAApC,CAA1D,GAAwGQ,cAA/G;AACH,GAFM,EAEJT,UAFI,CAAP;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASvB,aAAT,CAAuBuB,UAAvB,EAAmCM,aAAnC,EAAkD;AAC9C,MAAII,sBAAsB,GAAGlC,eAAe,CAACwB,UAAD,EAAaM,aAAb,CAA5C;AAEA,SAAOrC,MAAM,CAACsC,IAAP,CAAYP,UAAZ,EAAwBQ,MAAxB,CAA+B,UAAUC,cAAV,EAA0BR,IAA1B,EAAgC;AAClE,WAAOQ,cAAc,CAACR,IAAD,CAAd,GAAuBK,aAAa,CAACL,IAAD,CAApC,GAA6C1B,aAAa,CAACkC,cAAD,EAAiBR,IAAjB,EAAuBK,aAAa,CAACL,IAAD,CAApC,CAA1D,GAAwGQ,cAA/G;AACH,GAFM,EAEJC,sBAFI,CAAP;AAGH","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.clamp = clamp;\nexports.scrolledOverPercent = scrolledOverPercent;\nexports.resizeToRatio = resizeToRatio;\nexports.resizeToContain = resizeToContain;\nexports.resizeToCover = resizeToCover;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Clamp a value between two other values\n * @param {number} number\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(number) {\n    var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    return Math.min(Math.max(number, min), max);\n}\n\n/*\n * Get the percentage scrolled over an element\n * @param {HTMLElement} element\n * @return {number} value between 0 and 1\n */\nfunction scrolledOverPercent(element) {\n    var scrolled = window.pageYOffset;\n    var height = element.offsetHeight;\n    var top = element.offsetTop;\n    var percent = scrolled / (top + height);\n\n    return clamp(percent);\n}\n\n/*\n * Resize to original aspect ratio\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {string} prop Property name\n * @param {number} value Current property value\n * @param {Object} new height and width\n */\nfunction resizeToRatio(dimensions, prop, value) {\n    var _ref;\n\n    var otherProp = prop === 'width' ? 'height' : 'width';\n    var otherPropValue = Math.round(value * dimensions[otherProp] / dimensions[prop]);\n\n    return _ref = {}, _defineProperty(_ref, otherProp, otherPropValue), _defineProperty(_ref, prop, value), _ref;\n}\n\n/*\n * Simulate \"background-position: contain\"\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {Object} maxDimensions The available space\n * @param {number} maxDimensions.height\n * @param {number} maxDimensions.width\n * @return {Object} new height and width\n */\nfunction resizeToContain(dimensions, maxDimensions) {\n    return Object.keys(dimensions).reduce(function (prevDimensions, prop) {\n        return prevDimensions[prop] > maxDimensions[prop] ? resizeToRatio(prevDimensions, prop, maxDimensions[prop]) : prevDimensions;\n    }, dimensions);\n}\n\n/*\n * Simulate \"background-position: cover\"\n * @param {Object} dimensions The original dimensions\n * @param {number} dimensions.height\n * @param {number} dimensions.width\n * @param {Object} maxDimensions The available space\n * @param {number} maxDimensions.height\n * @param {number} maxDimensions.width\n * @return {Object} new height and width\n */\nfunction resizeToCover(dimensions, maxDimensions) {\n    var dimensionsAfterContain = resizeToContain(dimensions, maxDimensions);\n\n    return Object.keys(dimensions).reduce(function (prevDimensions, prop) {\n        return prevDimensions[prop] < maxDimensions[prop] ? resizeToRatio(prevDimensions, prop, maxDimensions[prop]) : prevDimensions;\n    }, dimensionsAfterContain);\n}"]},"metadata":{},"sourceType":"script"}