{"ast":null,"code":"var _jsxFileName = \"/home/coffeedoodles/Technigo/final-project-fe/code/src/components/Comments/CommentFetch.js\",\n    _s = $RefreshSig$();\n\n/*Outer Dependencies */\nimport React, { useState, useEffect } from \"react\";\n/* Local Dependencies */\n\nimport CommentForm from \"./CommentForm\";\nimport CommentList from \"./CommentList\";\nimport { COMMENT_API_URL } from \"../../reuseables/urls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentApp = () => {\n  _s();\n\n  const [commentList, setCommentList] = useState([]);\n  const [commentNew, setCommentNew] = useState('');\n  useEffect(() => {\n    fetchCommentList();\n  }, []);\n\n  const fetchCommentList = () => {\n    fetch(COMMENT_API_URL).then(res => res.json()).then(recievedComments => setCommentList(recievedComments)).catch(err => console.error(err));\n  };\n\n  const handleCommentNewChange = event => {\n    setCommentNew(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        comment: commentNew\n      })\n    };\n    fetch(COMMENT_API_URL, options).then(res => res.json()).then(() => fetchCommentList(), setCommentNew(''));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n      onFormSubmit: handleFormSubmit,\n      commentNew: commentNew,\n      onCommentNewChange: handleCommentNewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentList: commentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentApp, \"w968nN3kG+cJP+bgajtFQ56s2Pw=\");\n\n_c = CommentApp;\nexport default CommentApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentApp\");","map":{"version":3,"sources":["/home/coffeedoodles/Technigo/final-project-fe/code/src/components/Comments/CommentFetch.js"],"names":["React","useState","useEffect","CommentForm","CommentList","COMMENT_API_URL","CommentApp","commentList","setCommentList","commentNew","setCommentNew","fetchCommentList","fetch","then","res","json","recievedComments","catch","err","console","error","handleCommentNewChange","event","target","value","handleFormSubmit","preventDefault","options","method","headers","body","JSON","stringify","comment"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,KAAK,CAACP,eAAD,CAAL,CACGQ,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,gBAAD,IAAsBR,cAAc,CAACQ,gBAAD,CAF5C,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAID,GALD;;AAOA,QAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxCZ,IAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,OAAO,EAAExB;AAAX,OAAf;AALQ,KAAhB;AAQAG,IAAAA,KAAK,CAACP,eAAD,EAAkBsB,OAAlB,CAAL,CACGd,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAEQ,MACNF,gBAAgB,EAHlB,EAIED,aAAa,CAAC,EAAD,CAJf;AAMD,GAjBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,YAAY,EAAEe,gBADhB;AAEE,MAAA,UAAU,EAAEhB,UAFd;AAGE,MAAA,kBAAkB,EAAEY;AAHtB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,WAAD;AACE,MAAA,WAAW,EAAEd;AADf;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnDD;;GAAMD,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["/*Outer Dependencies */\nimport React, { useState, useEffect } from \"react\";\n\n/* Local Dependencies */\nimport CommentForm from \"./CommentForm\";\nimport CommentList from \"./CommentList\";\nimport { COMMENT_API_URL } from \"../../reuseables/urls\";\n\n\n\nconst CommentApp = () => {\n  const [commentList, setCommentList] = useState([]);\n  const [commentNew, setCommentNew] = useState('');\n\n  useEffect(() => {\n    fetchCommentList();\n  }, []);\n\n  const fetchCommentList = () => {\n    fetch(COMMENT_API_URL)\n      .then((res) => res.json())\n      .then((recievedComments) => setCommentList(recievedComments))\n      .catch((err) => console.error(err));\n  };\n\n  const handleCommentNewChange = (event) => {\n    setCommentNew(event.target.value);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ comment: commentNew }),\n    };\n\n    fetch(COMMENT_API_URL, options)\n      .then((res) => res.json())\n      .then(() => \n      fetchCommentList(),\n      setCommentNew('')\n      )\n  };\n\n\n  return (\n    <div className=\"comments-container\">\n      <CommentForm\n        onFormSubmit={handleFormSubmit}\n        commentNew={commentNew}\n        onCommentNewChange={handleCommentNewChange}\n      />\n      <CommentList\n        commentList={commentList}\n      />\n    </div>\n  );\n};\n\nexport default CommentApp\n"]},"metadata":{},"sourceType":"module"}